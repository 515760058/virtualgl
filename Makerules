APPNAME = VirtualGL

OS := $(shell uname -s)
ARCH := $(shell uname -m)

platform := windows
subplatform :=
ifeq ($(OS), Linux)
 platform := linux
 ifeq ($(ARCH), ia64)
  subplatform := ia64
 endif
 ifeq ($(ARCH), x86_64)
  subplatform := 64
  ifeq ($(M32), yes)
   subplatform :=
  endif
 endif
endif

# Macros which are common to all Unix platforms
VERSION := 1.0
BUILD := $(shell date +%Y%m%d)
ifeq ($(DEBUG), yes)
BUILD := $(BUILD)d
endif

ifeq ($(TOPDIR),)
TOPDIR = ..
endif

BLDDIR = $(TOPDIR)/$(platform)$(subplatform)
BLDDIR32 = $(TOPDIR)/$(platform)

ifeq ($(DEBUG), yes)
BLDDIR := $(BLDDIR)/dbg
BLDDIR32 := $(BLDDIR32)/dbg
endif

ENAME = bin
LNAME = lib
ONAME = obj

EDIR := $(BLDDIR)/$(ENAME)
EDIR32 := $(BLDDIR32)/$(ENAME)
LDIR := $(BLDDIR)/$(LNAME)
LDIR32 := $(BLDDIR32)/$(LNAME)
ODIR := $(BLDDIR)/$(ONAME)
ODIR32 := $(BLDDIR32)/$(ONAME)

_DUMMY := $(shell mkdir -p $(EDIR))
_DUMMY2 := $(shell mkdir -p $(LDIR))
_DUMMY3 := $(shell mkdir -p $(ODIR))

RM = rm -f

# System-specific macros
include $(TOPDIR)/Makerules.$(platform)

CINCLUDES := $(CINCLUDES) -I$(TOPDIR)/$(platform)$(subplatform)/include -I$(TOPDIR)/include -I.
CDEFINES := $(CDEFINES) -D__VERSION=\"$(VERSION)\" -D__BUILD=\"$(BUILD)\" -D__APPNAME=\"$(APPNAME)\"
ifeq ($(DEBUG), yes)
CDEFINES := $(CDEFINES) -D__DEBUG__
endif
CFLAGS := $(CFLAGS) $(CDEFINES) $(CINCLUDES)

# Implicit rules
$(ODIR)/%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

$(ODIR)/%.o: %.cpp
	$(CXX) $(CFLAGS) -c $< -o $@

$(LDIR)/lib%.a: $(ODIR)/%.o
	$(AR) $@ $<

$(ODIR)/%.obj: %.c
	$(CC) $(CFLAGS) $(HPUINC) -c $< -Fo$@

$(ODIR)/%.obj: %.cpp
	$(CXX) $(CFLAGS) $(HPUINC) -c $< -Fo$@

$(LDIR)/%.lib: $(ODIR)/%.obj
	$(AR) -OUT:$@ $<

# This assures that the "clean" command runs even if there is a file called
# "clean" in the current directory
.PHONY : clean
