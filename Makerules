APPNAME = VirtualGL

OS := $(shell uname -s)
ARCH := $(shell uname -m)

platform := windows
subplatform :=
ifeq ($(OS), Linux)
 platform := linux
 ifeq ($(ARCH), ia64)
  subplatform := ia64
 endif
 ifeq ($(ARCH), x86_64)
  subplatform := 64
 endif
endif
ifeq ($(OS), IRIX64)
 platform := irix
 subplatform := 64
endif
ifeq ($(OS), SunOS)
 platform := solaris
 subplatform := 64
endif
ifeq ($(OS), Darwin)
 platform := osx
endif

ifeq ($(M32), yes)
 subplatform :=
endif

# Macros which are common to all Unix platforms
VERSION := 2.0
BUILD := $(shell date +%Y%m%d)
ifeq ($(DEBUG), yes)
BUILD := $(BUILD)d
endif

ifeq ($(TOPDIR),)
TOPDIR = ..
endif

ifneq ($(DISTRO),)
BLDDIR = $(TOPDIR)/$(platform)$(subplatform)/$(DISTRO)
else
BLDDIR = $(TOPDIR)/$(platform)$(subplatform)
endif

ifeq ($(DEBUG), yes)
BLDDIR := $(BLDDIR)/dbg
endif

ENAME = bin
LNAME = lib
ONAME = obj

EDIR := $(BLDDIR)/$(ENAME)
LDIR := $(BLDDIR)/$(LNAME)
ODIR := $(BLDDIR)/$(ONAME)

_DUMMY := $(shell mkdir -p $(EDIR))
_DUMMY2 := $(shell mkdir -p $(LDIR))
_DUMMY3 := $(shell mkdir -p $(ODIR))

RM = rm -f

# System-specific macros
include $(TOPDIR)/Makerules.$(platform)

CINCLUDES := $(CINCLUDES) -I$(TOPDIR)/$(platform)$(subplatform)/include -I$(TOPDIR)/include -I.
CDEFINES := $(CDEFINES) -D__VERSION=\"$(VERSION)\" -D__BUILD=\"$(BUILD)\" -D__APPNAME=\"$(APPNAME)\"
ifeq ($(DEBUG), yes)
CDEFINES := $(CDEFINES) -D__DEBUG__
endif
ifeq ($(CXXFLAGS),)
CXXFLAGS := $(CFLAGS)
endif
CFLAGS := $(CFLAGS) $(OPTFLAG) $(ARCHFLAG) $(CDEFINES) $(CINCLUDES)
CXXFLAGS := $(CXXFLAGS) $(OPTFLAG) $(ARCHFLAG) $(CDEFINES) $(CINCLUDES)
LDFLAGS := $(OPTFLAG) $(ARCHFLAG) -L$(LDIR) $(LDFLAGS)

# Implicit rules
$(ODIR)/%.o: %.c
	$(CC) $(CFLAGS) -c $*.c -o $(ODIR)/$*.o
	$(CC) $(CFLAGS) $(DEPFLAG) $*.c > $(ODIR)/$*.d
	@mv -f $(ODIR)/$*.d $(ODIR)/$*.d.tmp
	@sed -e 's|.*:|$(ODIR)\/$*.o:|' < $(ODIR)/$*.d.tmp > $(ODIR)/$*.d
	@sed -e 's/.*://' -e 's/\\$$//' < $(ODIR)/$*.d.tmp | fmt -1 | \
	  sed -e 's/^ *//' -e 's/$$/:/' >> $(ODIR)/$*.d
	@rm -f $(ODIR)/$*.d.tmp

$(ODIR)/%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $*.cpp -o $(ODIR)/$*.o
	$(CXX) $(CXXFLAGS) $(DEPFLAG) $*.cpp > $(ODIR)/$*.d
	@mv -f $(ODIR)/$*.d $(ODIR)/$*.d.tmp
	@sed -e 's|.*:|$(ODIR)\/$*.o:|' < $(ODIR)/$*.d.tmp > $(ODIR)/$*.d
	@sed -e 's/.*://' -e 's/\\$$//' < $(ODIR)/$*.d.tmp | fmt -1 | \
	  sed -e 's/^ *//' -e 's/$$/:/' >> $(ODIR)/$*.d
	@rm -f $(ODIR)/$*.d.tmp

$(LDIR)/lib%.a: $(ODIR)/%.o
	$(AR) $@ $<

$(ODIR)/%.obj: %.c
	$(CC) $(CFLAGS) -c $< -Fo$@

$(ODIR)/%.obj: %.cpp
	$(CXX) $(CXXFLAGS) -c $< -Fo$@

$(LDIR)/%.lib: $(ODIR)/%.obj
	$(AR) -OUT:$@ $<

# This assures that the "clean" command runs even if there is a file called
# "clean" in the current directory
.PHONY : clean
