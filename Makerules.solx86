########################################
# Solaris x86 32-bit and 64-bit
########################################

ARCHFLAG =

ifeq ($(findstring gcc, $(CC)), gcc)

 ifeq ($(CXX),)
  CXX = g++
 endif
 CFLAGS = -Wall -fpic
 CDEFINES = -D_GNU_SOURCE

 ifeq ($(subplatform), 64)
  ARCHFLAG = -m64
  CDEFINES := $(CDEFINES) __arch64__
 endif
 ifeq ($(M32), yes)
  ARCHFLAG = -m32
 endif
 ifeq ($(DEBUG), yes)
  OPTFLAG = -O0 -ggdb
 else
  OPTFLAG = -O3
 endif
 SHFLAG = -shared -lc
 DEPFLAG = -MM
 MAPFLAG = -Wl,-M,
 LDFLAGS = -static-libgcc

 _DUMMY4 := $(shell ln -fs `$(CXX) $(ARCHFLAG) -print-file-name=libstdc++.a` $(LDIR))

else

 CC = cc
 CXX = CC -norunpath
 CFLAGS = -xCC -Kpic -mt
 CXXFLAGS = -Kpic -mt
 LAZY = -zlazyload
 NOLAZY = -znolazyload

 ifeq ($(subplatform), 64)
  ARCHFLAG = -xtarget=opteron -xarch=amd64
 endif
 ifeq ($(DEBUG), yes)
  OPTFLAG = -g
 else
  OPTFLAG = -xO5
 endif
 SHFLAG = -G -lc -z direct -lCrun -z nodirect
 DEPFLAG = -xM1
 MAPFLAG = -M

endif


AR = ar ruvs
INSTALL = /usr/ucb/install

CINCLUDES = -I/usr/X/include -I/usr/X11/include
MESAGLU := $(shell if [ -f /usr/X11/include/mesa/glu.h ]; then echo yes; fi)
ifeq ($(MESAGLU), yes)
 CDEFINES := $(CDEFINES) -DMESAGLU
endif

ifeq ($(USEGLP), yes)
 CDEFINES := $(CDEFINES) -DUSEGLP
endif
ifeq ($(USESSL), yes)
 CDEFINES := $(CDEFINES) -DUSESSL
endif

LDFLAGS := $(LDFLAGS) -mt -lpthread -lrt
ifeq ($(subplatform), 64)
 LDFLAGS := -L/usr/X/lib/64 -L/usr/X11/lib/64 -R/opt/SUNWvgl/lib/amd64 $(LDFLAGS)
else
 LDFLAGS := -L/usr/X/lib -L/usr/X11/lib -R/opt/SUNWvgl/lib $(LDFLAGS)
endif

DEFAULTJPEGLIB = libjpeg-turbo

SHEXT = so

FBXLIB = -lfbx -lX11 -lXext
SOCKLIB = -lrrsocket -lsocket -lxnet

ifeq ($(USESSL), yes)

 SSLDIR = $(TOPDIR)/../openssl.$(platform)$(subplatform)
 STATICSSL := $(shell if [ -f $(SSLDIR)/libssl.a -a -f $(SSLDIR)/libcrypto.a ]; then echo yes; fi)

 ifeq ($(STATICSSL), yes)

  CINCLUDES := $(CINCLUDES) -I$(SSLDIR)/include
  ifeq ($(CC), gcc)
   SSLLIB = -ldl -L$(SSLDIR) -Xlinker -Bstatic -Xlinker -lssl -Xlinker -lcrypto -Xlinker -Bdynamic
  else
   SSLLIB = -ldl -L$(SSLDIR) -Bstatic -lssl -lcrypto -Bdynamic
  endif

 else

  CINCLUDES := $(CINCLUDES) -I/usr/sfw/include
  ifeq ($(subplatform), 64)
   SSLLIB = -L/usr/sfw/lib/amd64 -R/usr/sfw/lib/amd64 -lssl -lcrypto
  else
   SSLLIB = -L/usr/sfw/lib -R/usr/sfw/lib -lssl -lcrypto
  endif

 endif

 SOCKLIB := $(SOCKLIB) $(SSLLIB)

endif

# Have to explicitly link libXm before libGL so Java apps don't barf
GLLIB = -lGL
FAKERLINK = $(GLLIB) -lm $(MAPFLAG)$(ODIR)/faker-mapfile.E

ZNOW = -z now
MLIB = -lmlib

USEXV = yes
