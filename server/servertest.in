#!/usr/bin/env bash
set -e
set -u
trap onexit INT
trap onexit TERM
trap onexit EXIT

SUCCESS=0
VGLCLIENTPID=-1
PID=-1

onexit()
{
	if [ $SUCCESS -eq 1 ]; then
		echo GREAT SUCCESS!
	else
		echo Some errors were encountered.
	fi
	if [ $PID -ne -1 ]; then
		kill -0 $PID >/dev/null 2>&1 && kill $PID
	fi
	if [ $VGLCLIENTPID -ne -1 ]; then
		kill -0 $VGLCLIENTPID >/dev/null 2>&1 && kill $VGLCLIENTPID
	fi
}

BIN=@CMAKE_RUNTIME_OUTPUT_DIRECTORY@
LIB=@CMAKE_LIBRARY_OUTPUT_DIRECTORY@
SSL=@VGL_USESSL@

NODL=
NOSTEREO=
NODBPIXMAP=
DEPTH=24
IPV6=1
WRAP=
while [ $# -gt 0 ]; do
	case "$1" in
	-nodl)
		echo "Testing without dlopen() interposer"
		NODL=-nodl
		;;
	-nostereo)
		NOSTEREO=-nostereo
		;;
	-nodbpixmap)
		NODBPIXMAP=-nodbpixmap
		;;
	-noipv6)
		IPV6=0
		;;
	-10bpc)
		DEPTH=30
		NOSTEREO=-nostereo
		;;
	-wrap)
		WRAP=$2;  shift
		;;
	esac
	shift
done

which Xvfb >/dev/null 2>&1 || (
	echo Xvfb not found!
	exit 1
)
Xvfb :42 -screen 0 1920x1200x$DEPTH -screen 1 1920x1200x$DEPTH >/dev/null 2>&1 & PID=$!
echo Xvfb started as process $PID
sleep 2

DISPLAY=:42 $BIN/vglrun $BIN/dlfakerut
echo

for SCREEN in 0 1; do

	export DISPLAY=:42.$SCREEN

	# Frame unit tests
	$WRAP $BIN/frameut -check
	if [ $DEPTH = 24 ]; then
		$WRAP $BIN/frameut -check -anaglyph
	fi
	$WRAP $BIN/frameut -check -logo

	# VGL Transport
	if [ $DEPTH = 24 ]; then
		echo \*\*\*\*\* Testing VGL Transport/IPv4, Screen $SCREEN \*\*\*\*\*
		echo
		$BIN/vglclient >vglclient.log 2>&1 & VGLCLIENTPID=$!
		VGL_CLIENT=127.0.0.1 LD_LIBRARY_PATH=$LIB \
			$BIN/vglrun $NODL -c jpeg $WRAP $BIN/fakerut $NOSTEREO $NODBPIXMAP
		if [ "$SSL" = "1" ]; then
			VGL_CLIENT=127.0.0.1 LD_LIBRARY_PATH=$LIB \
				$BIN/vglrun $NODL -c jpeg +s $WRAP $BIN/fakerut $NOSTEREO $NODBPIXMAP
		fi
		VGL_CLIENT=127.0.0.1 LD_LIBRARY_PATH=$LIB VGL_READBACK=sync \
			$BIN/vglrun $NODL -np 2 -c rgb $WRAP $BIN/fakerut $NOSTEREO $NODBPIXMAP
		# (we can't test stereo here, because the transport plugin assumes
		# quad-buffered, which isn't available with an X proxy.)
		VGL_CLIENT=127.0.0.1 LD_LIBRARY_PATH=$LIB \
			$BIN/vglrun $NODL -trans test $WRAP $BIN/fakerut -nostereo $NODBPIXMAP
		kill $VGLCLIENTPID
		VGLCLIENTPID=-1

		if [ "$IPV6" = "1" ]; then
			echo \*\*\*\*\* Testing VGL Transport/IPv6, Screen $SCREEN \*\*\*\*\*
			echo
			$BIN/vglclient -ipv6 >vglclient.log 2>&1 & VGLCLIENTPID=$!
			VGL_CLIENT=::1 LD_LIBRARY_PATH=$LIB \
				$BIN/vglrun $NODL -c jpeg $WRAP $BIN/fakerut $NOSTEREO $NODBPIXMAP
			if [ "$SSL" = "1" ]; then
				VGL_CLIENT=::1 LD_LIBRARY_PATH=$LIB \
					$BIN/vglrun $NODL -c jpeg +s $WRAP $BIN/fakerut $NOSTEREO $NODBPIXMAP
			fi
			VGL_CLIENT=[::1]:0 LD_LIBRARY_PATH=$LIB \
				$BIN/vglrun $NODL -trans test $WRAP $BIN/fakerut -nostereo $NODBPIXMAP
			kill $VGLCLIENTPID
			VGLCLIENTPID=-1
		fi
	fi

	# X11 Transport
	echo \*\*\*\*\* Testing X11 Transport, Screen $SCREEN \*\*\*\*\*
	echo
	LD_LIBRARY_PATH=$LIB \
		$BIN/vglrun $NODL -c proxy $WRAP $BIN/fakerut $NOSTEREO $NODBPIXMAP
	if [ $DEPTH = 24 ]; then
		LD_LIBRARY_PATH=$LIB \
			$BIN/vglrun $NODL -trans test2 $WRAP $BIN/fakerut $NOSTEREO $NODBPIXMAP
	fi

done

kill $PID
PID=-1

SUCCESS=1
