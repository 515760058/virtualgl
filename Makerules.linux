########################################
# Linux 32-bit and 64-bit
########################################

CC = cc
CXX = c++
AR = ar ruvs

CFLAGS = -Wall -fpic
CDEFINES = -D_GNU_SOURCE -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 
ifneq ($(USESSL), no)
CDEFINES := $(CDEFINES) -DUSESSL
endif

ifeq ($(subplatform), 64)
ARCHFLAG = -m64
LDFLAGS = -static-libgcc -L/usr/X11R6/lib64
else
ARCHFLAG =
LDFLAGS = -static-libgcc -L/usr/X11R6/lib
endif

ifeq ($(M32), yes)
ARCHFLAG = -m32
endif

_DUMMY4 := $(shell ln -fs `$(CXX) $(ARCHFLAG) -print-file-name=libstdc++.a` $(LDIR))

ifeq ($(DEBUG), yes)
OPTFLAG = -O0 -ggdb
else
OPTFLAG = -O2
endif

DEFAULTJPEGLIB = ipp

SHFLAG = -shared
SHEXT = so
DEPFLAG = -MM
MAPFLAG = -Wl,--version-script,

FBXLIB = -lfbx -lX11 -lXext
SOCKLIB = -lrrsocket -lpthread

ifneq ($(USESSL), no)

ifeq ($(subplatform), 64)
STATICSSL := $(shell if [ -f /opt/openssl-static/lib64/libssl.a -a -f /opt/openssl-static/lib64/libcrypto.a ]; then echo yes; fi)
STATICSSLDIR = /opt/openssl-static/lib64
else
STATICSSL := $(shell if [ -f /opt/openssl-static/lib/libssl.a -a -f /opt/openssl-static/lib/libcrypto.a ]; then echo yes; fi)
STATICSSLDIR = /opt/openssl-static/lib
endif

ifeq ($(STATICSSL), yes)
CINCLUDES = -I/opt/openssl-static/include
SOCKLIB := $(SOCKLIB) -ldl -L$(STATICSSLDIR) -Wl,-Bstatic -lssl -lcrypto -Wl,-Bdynamic
else
# Use dynamic libs provided by the O/S
SOCKLIB := $(SOCKLIB) -lssl -lcrypto
endif

endif

GLLIB = -lGL
FAKERLINK = $(GLLIB) $(MAPFLAG)$(ODIR)/faker-mapfile.E

ifeq ($(subplatform),)
RPMARCH = i386
DEBARCH = i386
else
ifeq ($(subplatform),64)
DEBARCH = amd64
else
DEBARCH = $(ARCH)
endif
RPMARCH = $(ARCH)
endif

ZNOW = -z now
